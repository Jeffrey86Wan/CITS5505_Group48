"""add new share models

Revision ID: fc3cb515ef71
Revises: dd7c536451be
Create Date: 2025-05-14 17:23:18.423351

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'fc3cb515ef71'
down_revision: Union[str, None] = 'dd7c536451be'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_transaction_category', table_name='transactions')
    op.drop_index('idx_transaction_user_date', table_name='transactions')
    op.drop_table('transactions')
    op.drop_table('uploads')
    op.drop_table('shared_reports')
    op.drop_table('users')
    op.drop_table('shared_views')
    op.drop_table('records')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('records',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), nullable=False),
    sa.Column('type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shared_views',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('shared_report_id', sa.INTEGER(), nullable=True),
    sa.Column('viewer_id', sa.INTEGER(), nullable=True),
    sa.Column('viewed_at', sa.DATETIME(), nullable=True),
    sa.Column('notified_owner', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['shared_report_id'], ['shared_reports.id'], ),
    sa.ForeignKeyConstraint(['viewer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), nullable=True),
    sa.Column('password', sa.VARCHAR(length=255), nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), nullable=False),
    sa.Column('oauth_provider', sa.VARCHAR(length=50), nullable=True),
    sa.Column('oauth_id', sa.VARCHAR(length=255), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('avatar', sa.VARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('shared_reports',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('owner_id', sa.INTEGER(), nullable=True),
    sa.Column('recipient_id', sa.INTEGER(), nullable=True),
    sa.Column('filter_params', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('uploads',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('filename', sa.VARCHAR(length=255), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), nullable=True),
    sa.Column('gpt_output_path', sa.VARCHAR(length=255), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('credit_type', sa.VARCHAR(length=20), nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), nullable=True),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('time', sa.TIME(), nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('upload_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['upload_id'], ['uploads.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_transaction_user_date', 'transactions', ['user_id', 'date'], unique=False)
    op.create_index('idx_transaction_category', 'transactions', ['category'], unique=False)
    # ### end Alembic commands ###
